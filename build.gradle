buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

task help{
	doLast {
		println "Available arguments are:\n\tenc :Source code encoding. Default value is \"UTF-8.\"\n\tver :The mod version. Default value is \"default.\"\n\tgroup :The mod creator group\n\nFor example,\n\tgradlew build -Pver=\"development\""
	}
}

apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.


version = "1.0"
group = "com.yourname.modid"
archivesBaseName = "myfirstmod"

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

if(project.hasProperty('ver')){
    version = project.ver
}else{
    version = "default"
}

if(project.hasProperty('group')){
    group = project.group
}else{
    group = "net.mysdbox.myfirstmod"
}

minecraft {
    version = "1.12.2-14.23.0.2491"
    runDir = "run"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = "snapshot_20170624"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

dependencies {
    compile fileTree( dir: 'lib', include: '*.jar' )

}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

tasks.withType(Jar) {
	if(project.hasProperty('enc')){
		compileJava.options.encoding = project.enc
		compileApiJava.options.encoding = project.enc
	}else{
		compileJava.options.encoding = "UTF-8"
		compileApiJava.options.encoding = "UTF-8"
	}
}